package com.minecraft.garden.managers;

import com.minecraft.garden.GardenPlugin;
import org.bukkit.Material;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class CustomPlantManager {
    
    private final GardenPlugin plugin;
    private final Map<String, CustomPlant> customPlants;
    
    public CustomPlantManager(GardenPlugin plugin) {
        this.plugin = plugin;
        this.customPlants = new HashMap<>();
        
        plugin.getLogger().info("    –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CustomPlantManager...");
        try {
            initializeCustomPlants();
            plugin.getLogger().info("    ‚úì CustomPlantManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ");
        } catch (Exception e) {
            plugin.getLogger().severe("    ‚úó –û–®–ò–ë–ö–ê –≤ CustomPlantManager: " + e.getMessage());
            throw e;
        }
    }
    
    private void initializeCustomPlants() {
        plugin.getLogger().info("      –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π...");
        
        // –ó–æ–ª–æ—Ç–æ–µ –¥–µ—Ä–µ–≤–æ
        try {
            customPlants.put("golden_tree", new CustomPlant(
                "golden_tree",
                "üå≥ –ó–æ–ª–æ—Ç–æ–µ –¥–µ—Ä–µ–≤–æ",
                Material.GOLD_INGOT,
                Material.GOLDEN_APPLE,
                "–ó–æ–ª–æ—Ç—ã–µ —Å–µ–º–µ–Ω–∞ –¥–µ—Ä–µ–≤–∞",
                "¬ß7–°–µ–º–µ–Ω–∞ –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–æ–ª–æ—Ç–æ–≥–æ –¥–µ—Ä–µ–≤–∞",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße5 –º–∏–Ω—É—Ç",
                "¬ß7–¶–µ–Ω–∞: ¬ße50 —Ä—É–±–ª–µ–π",
                "¬ß7–£—Ä–æ–∂–∞–π: ¬ße–ó–æ–ª–æ—Ç—ã–µ —è–±–ª–æ–∫–∏ (3x)",
                "¬ß7–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: ¬ße–î–∞–µ—Ç –∑–æ–ª–æ—Ç—ã–µ —è–±–ª–æ–∫–∏",
                300, // 5 –º–∏–Ω—É—Ç
                50,  // —Ü–µ–Ω–∞ —Å–µ–º–µ–Ω–∏
                150  // —Ü–µ–Ω–∞ —É—Ä–æ–∂–∞—è
            ));
            plugin.getLogger().info("        ‚úì –ó–æ–ª–æ—Ç–æ–µ –¥–µ—Ä–µ–≤–æ —Å–æ–∑–¥–∞–Ω–æ");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–æ–ª–æ—Ç–æ–≥–æ –¥–µ—Ä–µ–≤–∞: " + e.getMessage());
            throw e;
        }
        
        // –ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è —Ä–æ–∑–∞
        try {
            customPlants.put("crystal_rose", new CustomPlant(
                "crystal_rose",
                "üíé –ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è —Ä–æ–∑–∞",
                Material.AMETHYST_SHARD,
                Material.AMETHYST_SHARD,
                "–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ–º–µ–Ω–∞ —Ä–æ–∑—ã",
                "¬ß7–°–µ–º–µ–Ω–∞ —Å–∏—è—é—â–µ–π –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–π —Ä–æ–∑—ã",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße3 –º–∏–Ω—É—Ç—ã",
                "¬ß7–¶–µ–Ω–∞: ¬ße35 —Ä—É–±–ª–µ–π",
                "¬ß7–£—Ä–æ–∂–∞–π: ¬ße–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ –ª–µ–ø–µ—Å—Ç–∫–∏ (5x)",
                "¬ß7–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: ¬ße–°–≤–µ—Ç–∏—Ç—Å—è –≤ —Ç–µ–º–Ω–æ—Ç–µ",
                180, // 3 –º–∏–Ω—É—Ç—ã
                35,  // —Ü–µ–Ω–∞ —Å–µ–º–µ–Ω–∏
                100  // —Ü–µ–Ω–∞ —É—Ä–æ–∂–∞—è
            ));
            plugin.getLogger().info("        ‚úì –ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è —Ä–æ–∑–∞ —Å–æ–∑–¥–∞–Ω–∞");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–π —Ä–æ–∑—ã: " + e.getMessage());
            throw e;
        }
        
        // –û–≥–Ω–µ–Ω–Ω–∞—è —Ç—ã–∫–≤–∞
        try {
            customPlants.put("fire_pumpkin", new CustomPlant(
                "fire_pumpkin",
                "üî• –û–≥–Ω–µ–Ω–Ω–∞—è —Ç—ã–∫–≤–∞",
                Material.BLAZE_POWDER,
                Material.PUMPKIN,
                "–û–≥–Ω–µ–Ω–Ω—ã–µ —Å–µ–º–µ–Ω–∞ —Ç—ã–∫–≤—ã",
                "¬ß7–°–µ–º–µ–Ω–∞ –ø—ã–ª–∞—é—â–µ–π —Ç—ã–∫–≤—ã",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße4 –º–∏–Ω—É—Ç—ã",
                "¬ß7–¶–µ–Ω–∞: ¬ße40 —Ä—É–±–ª–µ–π",
                "¬ß7–£—Ä–æ–∂–∞–π: ¬ße–û–≥–Ω–µ–Ω–Ω—ã–µ —Ç—ã–∫–≤—ã (2x)",
                "¬ß7–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: ¬ße–ü–æ–¥–∂–∏–≥–∞–µ—Ç –≤—Ä–∞–≥–æ–≤",
                240, // 4 –º–∏–Ω—É—Ç—ã
                40,  // —Ü–µ–Ω–∞ —Å–µ–º–µ–Ω–∏
                120  // —Ü–µ–Ω–∞ —É—Ä–æ–∂–∞—è
            ));
            plugin.getLogger().info("        ‚úì –û–≥–Ω–µ–Ω–Ω–∞—è —Ç—ã–∫–≤–∞ —Å–æ–∑–¥–∞–Ω–∞");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–≥–Ω–µ–Ω–Ω–æ–π —Ç—ã–∫–≤—ã: " + e.getMessage());
            throw e;
        }
        
        // –õ–µ–¥—è–Ω–∞—è —è–≥–æ–¥–∞
        try {
            customPlants.put("ice_berry", new CustomPlant(
                "ice_berry",
                "‚ùÑÔ∏è –õ–µ–¥—è–Ω–∞—è —è–≥–æ–¥–∞",
                Material.ICE,
                Material.SWEET_BERRIES,
                "–õ–µ–¥—è–Ω—ã–µ —Å–µ–º–µ–Ω–∞ —è–≥–æ–¥—ã",
                "¬ß7–°–µ–º–µ–Ω–∞ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω–æ–π —è–≥–æ–¥—ã",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße2 –º–∏–Ω—É—Ç—ã",
                "¬ß7–¶–µ–Ω–∞: ¬ße25 —Ä—É–±–ª–µ–π",
                "¬ß7–£—Ä–æ–∂–∞–π: ¬ße–õ–µ–¥—è–Ω—ã–µ —è–≥–æ–¥—ã (4x)",
                "¬ß7–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: ¬ße–ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ—Ç –≤—Ä–∞–≥–æ–≤",
                120, // 2 –º–∏–Ω—É—Ç—ã
                25,  // —Ü–µ–Ω–∞ —Å–µ–º–µ–Ω–∏
                80   // —Ü–µ–Ω–∞ —É—Ä–æ–∂–∞—è
            ));
            plugin.getLogger().info("        ‚úì –õ–µ–¥—è–Ω–∞—è —è–≥–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–∞");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–µ–¥—è–Ω–æ–π —è–≥–æ–¥—ã: " + e.getMessage());
            throw e;
        }
        
        // –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –ø—à–µ–Ω–∏—Ü–∞
        try {
            customPlants.put("electric_wheat", new CustomPlant(
                "electric_wheat",
                "‚ö° –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –ø—à–µ–Ω–∏—Ü–∞",
                Material.REDSTONE,
                Material.WHEAT,
                "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å–µ–º–µ–Ω–∞ –ø—à–µ–Ω–∏—Ü—ã",
                "¬ß7–°–µ–º–µ–Ω–∞ –∑–∞—Ä—è–∂–µ–Ω–Ω–æ–π –ø—à–µ–Ω–∏—Ü—ã",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße90 —Å–µ–∫—É–Ω–¥",
                "¬ß7–¶–µ–Ω–∞: ¬ße30 —Ä—É–±–ª–µ–π",
                "¬ß7–£—Ä–æ–∂–∞–π: ¬ße–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –ø—à–µ–Ω–∏—Ü–∞ (6x)",
                "¬ß7–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: ¬ße–£–¥–∞—Ä—è–µ—Ç —Ç–æ–∫–æ–º",
                90,  // 90 —Å–µ–∫—É–Ω–¥
                30,  // —Ü–µ–Ω–∞ —Å–µ–º–µ–Ω–∏
                90   // —Ü–µ–Ω–∞ —É—Ä–æ–∂–∞—è
            ));
            plugin.getLogger().info("        ‚úì –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –ø—à–µ–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–π –ø—à–µ–Ω–∏—Ü—ã: " + e.getMessage());
            throw e;
        }
        
        // –†–∞–¥—É–∂–Ω—ã–π —Ü–≤–µ—Ç–æ–∫
        try {
            customPlants.put("rainbow_flower", new CustomPlant(
                "rainbow_flower",
                "üåà –†–∞–¥—É–∂–Ω—ã–π —Ü–≤–µ—Ç–æ–∫",
                Material.ORANGE_DYE,
                Material.ORANGE_TULIP,
                "–†–∞–¥—É–∂–Ω—ã–µ —Å–µ–º–µ–Ω–∞ —Ü–≤–µ—Ç–∫–∞",
                "¬ß7–°–µ–º–µ–Ω–∞ —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω–æ–≥–æ —Ü–≤–µ—Ç–∫–∞",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße6 –º–∏–Ω—É—Ç",
                "¬ß7–¶–µ–Ω–∞: ¬ße60 —Ä—É–±–ª–µ–π",
                "¬ß7–£—Ä–æ–∂–∞–π: ¬ße–†–∞–¥—É–∂–Ω—ã–µ –ª–µ–ø–µ—Å—Ç–∫–∏ (8x)",
                "¬ß7–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: ¬ße–ú–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç",
                360, // 6 –º–∏–Ω—É—Ç
                60,  // —Ü–µ–Ω–∞ —Å–µ–º–µ–Ω–∏
                200  // —Ü–µ–Ω–∞ —É—Ä–æ–∂–∞—è
            ));
            plugin.getLogger().info("        ‚úì –†–∞–¥—É–∂–Ω—ã–π —Ü–≤–µ—Ç–æ–∫ —Å–æ–∑–¥–∞–Ω");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–¥—É–∂–Ω–æ–≥–æ —Ü–≤–µ—Ç–∫–∞: " + e.getMessage());
            throw e;
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø–æ ID
     */
    public CustomPlant getCustomPlant(String plantId) {
        return customPlants.get(plantId);
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è
     */
    public Map<String, CustomPlant> getAllCustomPlants() {
        return customPlants;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç —Å–µ–º—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ä–∞—Å—Ç–µ–Ω–∏—è
     */
    public ItemStack createCustomSeed(String plantId) {
        CustomPlant plant = getCustomPlant(plantId);
        if (plant == null) {
            return null;
        }
        
        ItemStack item = new ItemStack(plant.seedMaterial);
        ItemMeta meta = item.getItemMeta();
        meta.setDisplayName(plant.seedName);
        meta.setLore(Arrays.asList(plant.seedDescription, plant.growthTime, plant.seedPrice));
        item.setItemMeta(meta);
        
        return item;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç —É—Ä–æ–∂–∞–π –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ä–∞—Å—Ç–µ–Ω–∏—è
     */
    public ItemStack createCustomCrop(String plantId) {
        CustomPlant plant = getCustomPlant(plantId);
        if (plant == null) {
            return null;
        }
        
        ItemStack item = new ItemStack(plant.cropMaterial);
        ItemMeta meta = item.getItemMeta();
        meta.setDisplayName(plant.displayName + " (–°–∞–¥)");
        meta.setLore(Arrays.asList(plant.cropDescription, plant.cropPrice));
        item.setItemMeta(meta);
        
        return item;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–º–µ—Ç —Å–µ–º–µ–Ω–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ä–∞—Å—Ç–µ–Ω–∏—è
     */
    public boolean isCustomPlantSeed(ItemStack item) {
        if (item == null || !item.hasItemMeta() || !item.getItemMeta().hasDisplayName()) {
            return false;
        }
        
        String displayName = item.getItemMeta().getDisplayName();
        for (CustomPlant plant : customPlants.values()) {
            if (displayName.equals(plant.seedName)) {
                return true;
            }
        }
        return false;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç ID —Ä–∞—Å—Ç–µ–Ω–∏—è –ø–æ —Å–µ–º–µ–Ω–∏
     */
    public String getPlantIdFromSeed(ItemStack item) {
        if (item == null || !item.hasItemMeta() || !item.getItemMeta().hasDisplayName()) {
            return null;
        }
        
        String displayName = item.getItemMeta().getDisplayName();
        for (Map.Entry<String, CustomPlant> entry : customPlants.entrySet()) {
            if (displayName.equals(entry.getValue().seedName)) {
                return entry.getKey();
            }
        }
        return null;
    }
    
    /**
     * –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞—Å—Ç–æ–º–Ω–æ–º —Ä–∞—Å—Ç–µ–Ω–∏–∏
     */
    public static class CustomPlant {
        public final String id;
        public final String displayName;
        public final Material seedMaterial;
        public final Material cropMaterial;
        public final String seedName;
        public final String seedDescription;
        public final String growthTime;
        public final String seedPrice;
        public final String cropDescription;
        public final String cropPrice;
        public final int growthTimeSeconds;
        public final int seedPriceValue;
        public final int cropPriceValue;
        
        public CustomPlant(String id, String displayName, Material seedMaterial, Material cropMaterial,
                          String seedName, String seedDescription, String growthTime, String seedPrice,
                          String cropDescription, String cropPrice, int growthTimeSeconds, 
                          int seedPriceValue, int cropPriceValue) {
            this.id = id;
            this.displayName = displayName;
            this.seedMaterial = seedMaterial;
            this.cropMaterial = cropMaterial;
            this.seedName = seedName;
            this.seedDescription = seedDescription;
            this.growthTime = growthTime;
            this.seedPrice = seedPrice;
            this.cropDescription = cropDescription;
            this.cropPrice = cropPrice;
            this.growthTimeSeconds = growthTimeSeconds;
            this.seedPriceValue = seedPriceValue;
            this.cropPriceValue = cropPriceValue;
        }
    }
} 