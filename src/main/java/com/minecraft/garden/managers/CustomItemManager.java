package com.minecraft.garden.managers;

import com.minecraft.garden.GardenPlugin;
import org.bukkit.Material;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class CustomItemManager {
    
    private final GardenPlugin plugin;
    private final Map<Material, ItemStack> customSeeds;
    private final Map<Material, ItemStack> customCrops;
    
    public CustomItemManager(GardenPlugin plugin) {
        this.plugin = plugin;
        this.customSeeds = new HashMap<>();
        this.customCrops = new HashMap<>();
        
        plugin.getLogger().info("    –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CustomItemManager...");
        try {
            initializeCustomItems();
            plugin.getLogger().info("    ‚úì CustomItemManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ");
        } catch (Exception e) {
            plugin.getLogger().severe("    ‚úó –û–®–ò–ë–ö–ê –≤ CustomItemManager: " + e.getMessage());
            throw e;
        }
    }
    
    private void initializeCustomItems() {
        plugin.getLogger().info("      –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–µ–º—è–Ω...");
        
        // –°–µ–º–µ–Ω–∞ –ø—à–µ–Ω–∏—Ü—ã
        try {
            customSeeds.put(Material.WHEAT_SEEDS, createSeedItem(
                Material.WHEAT_SEEDS, 
                "üçû –°–µ–º–µ–Ω–∞ –ø—à–µ–Ω–∏—Ü—ã (–°–∞–¥)",
                "¬ß7–ó–æ–ª–æ—Ç—ã–µ —Å–µ–º–µ–Ω–∞ –ø—à–µ–Ω–∏—Ü—ã",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße30 —Å–µ–∫—É–Ω–¥",
                "¬ß7–¶–µ–Ω–∞: ¬ße" + plugin.getConfigManager().getSeedPrice("wheat") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –°–µ–º–µ–Ω–∞ –ø—à–µ–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º—è–Ω –ø—à–µ–Ω–∏—Ü—ã: " + e.getMessage());
            throw e;
        }
        
        // –°–µ–º–µ–Ω–∞ –º–æ—Ä–∫–æ–≤–∏
        try {
            customSeeds.put(Material.CARROT, createSeedItem(
                Material.CARROT,
                "ü•ï –°–µ–º–µ–Ω–∞ –º–æ—Ä–∫–æ–≤–∏ (–°–∞–¥)",
                "¬ß7–°–≤–µ–∂–∏–µ —Å–µ–º–µ–Ω–∞ –º–æ—Ä–∫–æ–≤–∏",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße45 —Å–µ–∫—É–Ω–¥",
                "¬ß7–¶–µ–Ω–∞: ¬ße" + plugin.getConfigManager().getSeedPrice("carrot") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –°–µ–º–µ–Ω–∞ –º–æ—Ä–∫–æ–≤–∏ —Å–æ–∑–¥–∞–Ω—ã");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º—è–Ω –º–æ—Ä–∫–æ–≤–∏: " + e.getMessage());
            throw e;
        }
        
        // –°–µ–º–µ–Ω–∞ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è
        try {
            customSeeds.put(Material.POTATO, createSeedItem(
                Material.POTATO,
                "ü•î –°–µ–º–µ–Ω–∞ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è (–°–∞–¥)",
                "¬ß7–û—Ç–±–æ—Ä–Ω—ã–µ —Å–µ–º–µ–Ω–∞ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße45 —Å–µ–∫—É–Ω–¥",
                "¬ß7–¶–µ–Ω–∞: ¬ße" + plugin.getConfigManager().getSeedPrice("potato") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –°–µ–º–µ–Ω–∞ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Å–æ–∑–¥–∞–Ω—ã");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º—è–Ω –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è: " + e.getMessage());
            throw e;
        }
        
        // –°–µ–º–µ–Ω–∞ —Å–≤—ë–∫–ª—ã
        try {
            customSeeds.put(Material.BEETROOT_SEEDS, createSeedItem(
                Material.BEETROOT_SEEDS,
                "üî¥ –°–µ–º–µ–Ω–∞ —Å–≤—ë–∫–ª—ã (–°–∞–¥)",
                "¬ß7–ö—Ä–∞—Å–Ω—ã–µ —Å–µ–º–µ–Ω–∞ —Å–≤—ë–∫–ª—ã",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße35 —Å–µ–∫—É–Ω–¥",
                "¬ß7–¶–µ–Ω–∞: ¬ße" + plugin.getConfigManager().getSeedPrice("beetroot") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –°–µ–º–µ–Ω–∞ —Å–≤—ë–∫–ª—ã —Å–æ–∑–¥–∞–Ω—ã");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º—è–Ω —Å–≤—ë–∫–ª—ã: " + e.getMessage());
            throw e;
        }
        
        // –°–µ–º–µ–Ω–∞ —Ç—ã–∫–≤—ã
        try {
            customSeeds.put(Material.PUMPKIN_SEEDS, createSeedItem(
                Material.PUMPKIN_SEEDS,
                "üéÉ –°–µ–º–µ–Ω–∞ —Ç—ã–∫–≤—ã (–°–∞–¥)",
                "¬ß7–ë–æ–ª—å—à–∏–µ —Å–µ–º–µ–Ω–∞ —Ç—ã–∫–≤—ã",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße2 –º–∏–Ω—É—Ç—ã",
                "¬ß7–¶–µ–Ω–∞: ¬ße" + plugin.getConfigManager().getSeedPrice("pumpkin") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –°–µ–º–µ–Ω–∞ —Ç—ã–∫–≤—ã —Å–æ–∑–¥–∞–Ω—ã");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º—è–Ω —Ç—ã–∫–≤—ã: " + e.getMessage());
            throw e;
        }
        
        // –°–µ–º–µ–Ω–∞ –∞—Ä–±—É–∑–∞
        try {
            customSeeds.put(Material.MELON_SEEDS, createSeedItem(
                Material.MELON_SEEDS,
                "üçâ –°–µ–º–µ–Ω–∞ –∞—Ä–±—É–∑–∞ (–°–∞–¥)",
                "¬ß7–°–ª–∞–¥–∫–∏–µ —Å–µ–º–µ–Ω–∞ –∞—Ä–±—É–∑–∞",
                "¬ß7–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: ¬ße2 –º–∏–Ω—É—Ç—ã",
                "¬ß7–¶–µ–Ω–∞: ¬ße" + plugin.getConfigManager().getSeedPrice("melon") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –°–µ–º–µ–Ω–∞ –∞—Ä–±—É–∑–∞ —Å–æ–∑–¥–∞–Ω—ã");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º—è–Ω –∞—Ä–±—É–∑–∞: " + e.getMessage());
            throw e;
        }
        
        plugin.getLogger().info("      –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —É—Ä–æ–∂–∞—è...");
        
        // –£—Ä–æ–∂–∞–π –ø—à–µ–Ω–∏—Ü—ã
        try {
            customCrops.put(Material.WHEAT, createCropItem(
                Material.WHEAT,
                "üçû –ü—à–µ–Ω–∏—Ü–∞ (–°–∞–¥)",
                "¬ß7–ó–æ–ª–æ—Ç–∞—è –ø—à–µ–Ω–∏—Ü–∞ —Å –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∫–∞",
                "¬ß7–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: ¬ße" + plugin.getConfigManager().getCropPrice("wheat") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –£—Ä–æ–∂–∞–π –ø—à–µ–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Ä–æ–∂–∞—è –ø—à–µ–Ω–∏—Ü—ã: " + e.getMessage());
            throw e;
        }
        
        // –£—Ä–æ–∂–∞–π –º–æ—Ä–∫–æ–≤–∏
        try {
            customCrops.put(Material.CARROTS, createCropItem(
                Material.CARROT,  // –ò—Å–ø–æ–ª—å–∑—É–µ–º CARROT –≤–º–µ—Å—Ç–æ CARROTS
                "ü•ï –ú–æ—Ä–∫–æ–≤—å (–°–∞–¥)",
                "¬ß7–°–≤–µ–∂–∞—è –º–æ—Ä–∫–æ–≤—å —Å –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∫–∞",
                "¬ß7–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: ¬ße" + plugin.getConfigManager().getCropPrice("carrot") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –£—Ä–æ–∂–∞–π –º–æ—Ä–∫–æ–≤–∏ —Å–æ–∑–¥–∞–Ω");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Ä–æ–∂–∞—è –º–æ—Ä–∫–æ–≤–∏: " + e.getMessage());
            throw e;
        }
        
        // –£—Ä–æ–∂–∞–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è
        try {
            customCrops.put(Material.POTATOES, createCropItem(
                Material.POTATO,  // –ò—Å–ø–æ–ª—å–∑—É–µ–º POTATO –≤–º–µ—Å—Ç–æ POTATOES
                "ü•î –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å (–°–∞–¥)",
                "¬ß7–û—Ç–±–æ—Ä–Ω—ã–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å —Å –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∫–∞",
                "¬ß7–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: ¬ße" + plugin.getConfigManager().getCropPrice("potato") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –£—Ä–æ–∂–∞–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è —Å–æ–∑–¥–∞–Ω");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Ä–æ–∂–∞—è –∫–∞—Ä—Ç–æ—Ñ–µ–ª—è: " + e.getMessage());
            throw e;
        }
        
        // –£—Ä–æ–∂–∞–π —Å–≤—ë–∫–ª—ã
        try {
            customCrops.put(Material.BEETROOTS, createCropItem(
                Material.BEETROOT,  // –ò—Å–ø–æ–ª—å–∑—É–µ–º BEETROOT –≤–º–µ—Å—Ç–æ BEETROOTS
                "üî¥ –°–≤—ë–∫–ª–∞ (–°–∞–¥)",
                "¬ß7–ö—Ä–∞—Å–Ω–∞—è —Å–≤—ë–∫–ª–∞ —Å –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∫–∞",
                "¬ß7–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: ¬ße" + plugin.getConfigManager().getCropPrice("beetroot") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –£—Ä–æ–∂–∞–π —Å–≤—ë–∫–ª—ã —Å–æ–∑–¥–∞–Ω");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Ä–æ–∂–∞—è —Å–≤—ë–∫–ª—ã: " + e.getMessage());
            throw e;
        }
        
        // –£—Ä–æ–∂–∞–π —Ç—ã–∫–≤—ã
        try {
            customCrops.put(Material.PUMPKIN, createCropItem(
                Material.PUMPKIN,
                "üéÉ –¢—ã–∫–≤–∞ (–°–∞–¥)",
                "¬ß7–ë–æ–ª—å—à–∞—è —Ç—ã–∫–≤–∞ —Å –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∫–∞",
                "¬ß7–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: ¬ße" + plugin.getConfigManager().getCropPrice("pumpkin") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –£—Ä–æ–∂–∞–π —Ç—ã–∫–≤—ã —Å–æ–∑–¥–∞–Ω");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Ä–æ–∂–∞—è —Ç—ã–∫–≤—ã: " + e.getMessage());
            throw e;
        }
        
        // –£—Ä–æ–∂–∞–π –∞—Ä–±—É–∑–∞
        try {
            customCrops.put(Material.MELON, createCropItem(
                Material.MELON,
                "üçâ –ê—Ä–±—É–∑ (–°–∞–¥)",
                "¬ß7–°–ª–∞–¥–∫–∏–π –∞—Ä–±—É–∑ —Å –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∫–∞",
                "¬ß7–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: ¬ße" + plugin.getConfigManager().getCropPrice("melon") + " —Ä—É–±–ª–µ–π"
            ));
            plugin.getLogger().info("        ‚úì –£—Ä–æ–∂–∞–π –∞—Ä–±—É–∑–∞ —Å–æ–∑–¥–∞–Ω");
        } catch (Exception e) {
            plugin.getLogger().severe("        ‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Ä–æ–∂–∞—è –∞—Ä–±—É–∑–∞: " + e.getMessage());
            throw e;
        }
    }
    
    private ItemStack createSeedItem(Material material, String name, String... lore) {
        ItemStack item = new ItemStack(material);
        ItemMeta meta = item.getItemMeta();
        meta.setDisplayName(name);
        meta.setLore(Arrays.asList(lore));
        item.setItemMeta(meta);
        return item;
    }
    
    private ItemStack createCropItem(Material material, String name, String... lore) {
        ItemStack item = new ItemStack(material);
        ItemMeta meta = item.getItemMeta();
        meta.setDisplayName(name);
        meta.setLore(Arrays.asList(lore));
        item.setItemMeta(meta);
        return item;
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–µ–º—è –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª—É
     */
    public ItemStack getCustomSeed(Material material) {
        return customSeeds.getOrDefault(material, new ItemStack(material));
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π —É—Ä–æ–∂–∞–π –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª—É
     */
    public ItemStack getCustomCrop(Material material) {
        return customCrops.getOrDefault(material, new ItemStack(material));
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–º–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–º —Å–µ–º–µ–Ω–µ–º
     */
    public boolean isCustomSeed(ItemStack item) {
        if (item == null || !item.hasItemMeta() || !item.getItemMeta().hasDisplayName()) {
            return false;
        }
        
        String displayName = item.getItemMeta().getDisplayName();
        return displayName.contains("(–°–∞–¥)") && displayName.contains("–°–µ–º–µ–Ω–∞");
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–º–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–º —É—Ä–æ–∂–∞–µ–º
     */
    public boolean isCustomCrop(ItemStack item) {
        if (item == null || !item.hasItemMeta() || !item.getItemMeta().hasDisplayName()) {
            return false;
        }
        
        String displayName = item.getItemMeta().getDisplayName();
        return displayName.contains("(–°–∞–¥)") && !displayName.contains("–°–µ–º–µ–Ω–∞");
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –±–∞–∑–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –∏–∑ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
     */
    public Material getBaseMaterial(ItemStack item) {
        return item.getType();
    }
} 